---
title: 'R4DS: Chapter 28'
author: "Brandon Foltz"
date: "2023-03-10"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
```
```{r}
x <- c("one", "two", "three", "four", "five")
x[c(3,2,5)]
x[c(1,1,5,5,5,2)]
x[c(-1, -3, -5)]
```

```{r}
x <- c(10, 3, NA, 5, 8, 1, NA)
x[!is.na(x)]
x[x %% 2 == 0]
```

```{r}
x <- c(abc = 1, def = 2, xyz = 5)
x[c("xyz", "def")]
x[]
```

```{r}
df <- tibble(
  x = 1:3, 
  y = c("a", "e", "f"), 
  z = runif(3)
)

df[1, 2]
df[, c("x" , "y")]
df[df$x > 1, ]
```

dplyr equivalents

```{r}
df <- tibble(
  x = c(2, 3, 1, 1, NA), 
  y = letters[1:5], 
  z = runif(5)
)
df |> filter(x > 1)

# same as
df[!is.na(df$x) & df$x > 1, ]
```

```{r}
df |> arrange(x, y)

# same as
df[order(df$x, df$y), ]
```

```{r}
df |> select(x, z)

# same as
df[, c("x", "z")]
```

```{r}
df |> 
  filter(x > 1) |> 
  select(y, z)
#> # A tibble: 2 × 2
#>   y           z
#>   <chr>   <dbl>
#> 1 a     0.157  
#> 2 b     0.00740

df |> subset(x > 1, c(y, z))
```

Selecting single elements

```{r}
tb <- tibble(
  x = 1:4,
  y = c(10, 4, 1, 21)
)

# by position
tb[[1]]
#> [1] 1 2 3 4

# by name
tb[["x"]]
#> [1] 1 2 3 4
tb$x
#> [1] 1 2 3 4

tb$z <- tb$x + tb$y
tb
#> # A tibble: 4 × 3
#>       x     y     z
#>   <int> <dbl> <dbl>
#> 1     1    10    11
#> 2     2     4     6
#> 3     3     1     4
#> 4     4    21    25
```

```{r}
max(diamonds$carat)
#> [1] 5.01

levels(diamonds$cut)
#> [1] "Fair"      "Good"      "Very Good" "Premium"   "Ideal"
#> 

diamonds |> pull(carat) |> mean()
#> [1] 0.7979397

diamonds |> pull(cut) |> levels()
#> [1] "Fair"      "Good"      "Very Good" "Premium"   "Ideal"
```

Tibbles

```{r}
df <- data.frame(x1 = 1)
df$x
df$f

tb <- tibble(x1 = 1)
tb$x
tb$f
```

Lists

```{r}
l <- list(
  a = 1:3,
  b = "a string",
  c = pi,
  d = list(-1, -5)
)
l

str(l[1:2])
str(l[1])
str(l[4])

str(l[[1]])
str(l[[4]])
str(l$a)
```

Apply family

```{r}
df <- tibble(a = 1, b =2, c = "a", d = "b", e = NA)

num_cols <- sapply(df, is.numeric)
num_cols

df[ , num_cols] <- lapply(df[ , num_cols, drop = FALSE], \(x) x * 2)
df
```

```{r}
diamonds |>
  group_by(cut)|>
  summarise(price = mean(price))

tapply(diamonds$price, diamonds$cut, mean)
```

Plots

```{r}
hist(diamonds$carat)
plot(diamonds$carat, diamonds$price)
```

